from sklearn.impute import SimpleImputer
from sklearn.preprocessing import MinMaxScaler
from sklearn.cluster import KMeans
import numpy as np
import pandas as pd

df = pd.read_csv('/Users/ryanma/Desktop/K-means.csv')

numeric_columns = df.select_dtypes(include=[np.number]).columns
min_max_scaler = MinMaxScaler(feature_range=(0, 1))
df[numeric_columns] = min_max_scaler.fit_transform(df[numeric_columns])

imputer = SimpleImputer(strategy='mean')
df_imputed = imputer.fit_transform(df)

n_clusters = 16  # Adjust the number of clusters as needed
clf = KMeans(n_clusters=n_clusters)
labels = clf.fit_predict(df_imputed)
df['類群'] = labels

cluster_centers_scaled = clf.cluster_centers_

cluster_centers_original = min_max_scaler.inverse_transform(cluster_centers_scaled)

df_original = pd.read_csv('/Users/ryanma/Desktop/K-means.csv')
df_original['類群'] = labels

original_data = min_max_scaler.inverse_transform(df[numeric_columns])

df.to_csv('/Users/ryanma/Desktop/K-means-result.csv', index=False)
df_original.to_csv('/Users/ryanma/Desktop/K-means-result.csv', index=False,encoding='utf-8-sig')

print("Cluster Centers (Original Data Space):")
print(cluster_centers_original)
print(df.head())
print("Original Data:")
print(original_data)
