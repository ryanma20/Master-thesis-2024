#累積分佈曲線繪製
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import glob

# Specify the folder path containing CSV files
folder_path = '/Users/ryanma/Desktop/K-means'
file_paths = glob.glob(folder_path + '/*.csv')

# Check the contents of file_paths
print("File paths:", file_paths)

dfs = []
for file_path in file_paths:
    df = pd.read_csv(file_path)
    # Check the number of rows in each DataFrame
    print(f"File: {file_path}, Rows: {df.shape[0]}")
    df.sort_values(by='total_kilometers', inplace=True)
    df['cumulative_frequency'] = df['total_kilometers'].cumsum()
    df['probability'] = df['cumulative_frequency'] / df['cumulative_frequency'].max() 
    dfs.append(df)

# Check the contents of dfs
print("Number of DataFrames in dfs:", len(dfs))

# Check the first few rows of the first DataFrame in dfs
if dfs:
    print("First DataFrame in dfs:")
    print(dfs[0].head())

combined_df = pd.concat(dfs)

fig, ax = plt.subplots(figsize=(8, 6))

for i, df in enumerate(dfs, start=1):
    sns.lineplot(data=df, x='total_kilometers', y='probability', ax=ax, label=f'Group {i}')

ax.set_title('Cumulative Distribution Function (CDF) - Multiple Files')
ax.set_xlabel('Travel Distance (km)')
ax.set_ylabel('Probability') 

plt.grid(True)
plt.show()


#時空熱力圖繪製，一次輸出十六個集群的圖片
import numpy as np
import os
import matplotlib.pyplot as plt
import seaborn as sns

#Y軸設定為月份，X軸設定為24小時制
months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
hours = list(range(24))

input_folder = '/Users/ryanma/Desktop/時空熱力圖/data'
output_folder = '/Users/ryanma/Desktop/時空熱力圖/picture'

input_files = [f for f in os.listdir(input_folder) if f.endswith('.csv')]

for input_file in input_files:
    input_path = os.path.join(input_folder, input_file)
    output_path = os.path.join(output_folder, f'heatmap_{os.path.splitext(input_file)[0]}.png')

    # 讀入csv為Pandas DataFrame
    df = pd.read_csv(input_path)

    #資料處理
    df.replace(1, np.nan, inplace=True)
    heatmap_data = df.pivot_table(index='month_', columns='hour_', aggfunc='size', fill_value=0)
    heatmap_data = heatmap_data.loc[(heatmap_data != 0).any(axis=1), (heatmap_data != 0).any(axis=0)]
    mask = heatmap_data < 30

    plt.figure(figsize=(20, 4))
    sns.heatmap(heatmap_data, cmap="Oranges", cbar_kws={'label': '搭乘量'}, linewidths=0.5, linecolor='grey', mask=mask, alpha=0.5)
    
    plt.title(os.path.splitext(input_file)[0]) 
    plt.xlabel('Boarding Time')
    plt.ylabel('Month')

    plt.xticks(ticks=range(len(hours)), labels=hours)
    plt.yticks(ticks=range(len(months)), labels=months, rotation=0)

    plt.savefig(output_path)
    plt.close()  # Close the plot to avoid overlapping in subsequent iterations
